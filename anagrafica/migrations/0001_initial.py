# Generated by Django 3.0.1 on 2020-07-29 11:10

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name="Nome dell'aula")),
                ('building', models.CharField(choices=[('Sede centrale', 'Sede centrale'), ('Officine', 'Officine')], default='Sede centrale', max_length=25, verbose_name='Edificio')),
                ('floor', models.CharField(max_length=5, verbose_name='Piano')),
            ],
            options={
                'verbose_name': 'Aula',
                'verbose_name_plural': 'Aule',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=35, unique=True, verbose_name='Ragione sociale')),
                ('vat', models.CharField(max_length=35, unique=True, verbose_name='P. IVA')),
                ('commerce_registration', models.CharField(max_length=35, unique=True, verbose_name='Iscrizione Camera di Commercio N°')),
                ('registered_office_city', models.CharField(max_length=50, verbose_name='Sede legale - Comune')),
                ('registered_office_address', models.CharField(max_length=50, verbose_name='Sede legale - Indirizzo')),
                ('operational_headquarters_city', models.CharField(max_length=50, verbose_name='Sede operativa - Comune')),
                ('operational_headquarters_address', models.CharField(max_length=50, verbose_name='Sede operativa - Indirizzo')),
                ('chief_legal_surname', models.CharField(max_length=50, verbose_name='Responsabile legale - Cognome')),
                ('chief_legal_name', models.CharField(max_length=50, verbose_name='RL - Nome')),
                ('chief_legal_birth', models.DateField(verbose_name='RL - Data di nascita')),
                ('chief_legal_place_of_birth', models.CharField(max_length=50, verbose_name='RL - Nato a')),
                ('chief_legal_role', models.CharField(max_length=50, verbose_name='RL - In qualità di')),
                ('chief_legal_resident_in', models.CharField(max_length=50, verbose_name='RL - Residente in')),
                ('company_contact', models.CharField(max_length=50, verbose_name='Referente aziendale')),
                ('email', models.EmailField(blank=True, max_length=50, null=True, verbose_name='E-mail')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefono')),
            ],
            options={
                'verbose_name': 'Ditta',
                'verbose_name_plural': 'Ditte',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nome del corso')),
                ('start_date', models.DateField(default=datetime.datetime.now, verbose_name='Data di inizio')),
                ('expected_end_date', models.DateField(default=datetime.datetime.now, verbose_name='Data prevista conclusione')),
                ('actual_end_date', models.DateField(blank=True, default=datetime.datetime.now, null=True, verbose_name='Data effettiva conclusione')),
                ('duration', models.PositiveSmallIntegerField(verbose_name='Durata in ore')),
                ('classroom_h', models.PositiveSmallIntegerField(verbose_name='Ore di aula')),
                ('stage_h', models.PositiveSmallIntegerField(verbose_name='Ore di stage')),
            ],
            options={
                'verbose_name': 'Corso',
                'verbose_name_plural': 'Corsi',
            },
        ),
        migrations.CreateModel(
            name='CourseType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_type', models.CharField(max_length=50, unique=True, verbose_name='Tipologia')),
            ],
            options={
                'verbose_name': 'Tipologia di corso',
                'verbose_name_plural': 'Tipologie di corso',
            },
        ),
        migrations.CreateModel(
            name='FooModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foo_field', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector_name', models.CharField(max_length=50, unique=True, verbose_name='Settore')),
            ],
            options={
                'verbose_name': 'Settore',
                'verbose_name_plural': 'Settori',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=50, verbose_name='Cognome')),
                ('name', models.CharField(max_length=50, verbose_name='Cognome')),
                ('date_of_birth', models.DateField(default=datetime.datetime.now, verbose_name='Data di nascita')),
                ('place_of_birth', models.CharField(max_length=50, verbose_name='Luogo di nascita')),
                ('resident_in_city', models.CharField(max_length=50, verbose_name='Città di residenza')),
                ('resident_in_address', models.CharField(max_length=50, verbose_name='Indirizzo di residenza')),
                ('postal_code', models.CharField(max_length=5, verbose_name='CAP')),
                ('fiscal_code', models.CharField(max_length=16, unique=True, verbose_name='C.F.')),
                ('email', models.EmailField(blank=True, max_length=50, null=True, verbose_name='E-mail')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefono')),
                ('curriculum', models.FileField(blank=True, null=True, upload_to='', verbose_name='CV')),
                ('INPS', models.FileField(blank=True, null=True, upload_to='', verbose_name='Situazione INPS')),
                ('IRPEF', models.FileField(blank=True, null=True, upload_to='', verbose_name='Situazione IRPEF')),
                ('contract_type', models.CharField(choices=[('C', 'Collaborazione/P.IVA'), ('P', 'Contratto a progetto'), ('D', 'Tempo determinato'), ('I', 'Tempo indeterminato')], max_length=50, verbose_name='Tipo di contratto')),
                ('task', models.CharField(choices=[('A', 'Altro'), ('D', 'Docenza'), ('T', 'Tutor'), ('S', 'Segreteria'), ('C', 'Coordinamento'), ('P', 'Direzione')], max_length=20, verbose_name='Mansione')),
                ('contract_hours', models.PositiveSmallIntegerField(default=0, verbose_name='Ore da contratto')),
                ('contract_expiration', models.DateField(blank=True, null=True, verbose_name='Data scadenza contratto')),
                ('specialization', models.ManyToManyField(blank=True, to='anagrafica.Sector', verbose_name='Specializzazioni')),
            ],
            options={
                'verbose_name': 'Personale',
                'verbose_name_plural': 'Personale',
            },
        ),
        migrations.CreateModel(
            name='TrainingUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.PositiveSmallIntegerField(verbose_name='Codice')),
                ('name', models.CharField(max_length=50, verbose_name='Nome')),
                ('hours_expected', models.PositiveSmallIntegerField(verbose_name='Ore previste')),
                ('hours_remaining', models.PositiveSmallIntegerField(default=models.PositiveSmallIntegerField(verbose_name='Ore previste'), verbose_name='Ore residue')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reference_course', to='anagrafica.Course', verbose_name='Corso')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_in_charge', to='anagrafica.Staff', verbose_name='Docente incaricato')),
            ],
            options={
                'verbose_name': 'Unità formativa',
                'verbose_name_plural': 'Unità formative',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nome')),
                ('surname', models.CharField(max_length=50, verbose_name='Cognome')),
                ('date_of_birth', models.DateField(default=datetime.datetime.now, verbose_name='Data di nascita')),
                ('place_of_birth', models.CharField(max_length=50, verbose_name='Luogo di nascita')),
                ('resident_in_city', models.CharField(max_length=50, verbose_name='Città di residenza')),
                ('resident_in_address', models.CharField(max_length=50, verbose_name='Indirizzo di residenza')),
                ('postal_code', models.CharField(max_length=5, verbose_name='CAP')),
                ('fiscal_code', models.CharField(max_length=16, unique=True, verbose_name='C.F.')),
                ('handicap', models.BooleanField(verbose_name='Portatore di handicap')),
                ('email', models.EmailField(blank=True, max_length=50, null=True, verbose_name='Email')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefono')),
                ('parent_email_1', models.EmailField(blank=True, max_length=50, null=True, verbose_name='Email genitore / tutore (1)')),
                ('parent_telephone_1', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefono genitore / tutore (1)')),
                ('parent_email_2', models.EmailField(blank=True, max_length=50, null=True, verbose_name='Email genitore / tutore (2)')),
                ('parent_telephone_2', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefono genitore / tutore (2)')),
                ('registration_date', models.DateField(default=datetime.datetime.now, verbose_name='Data di iscrizione')),
                ('withdrawal_date', models.DateField(blank=True, null=True, verbose_name='Data di ritiro')),
                ('withdrawal_cause', models.CharField(blank=True, choices=[('C', 'Cambio di attività formativa'), ('L', 'Ingresso nel mondo del lavoro'), ('A', 'Abbandono'), ('E', 'Espulsione')], max_length=50, null=True, verbose_name='Causa del ritiro')),
                ('qualification_date', models.DateField(blank=True, null=True, verbose_name='Data di qualifica')),
                ('grade', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Voto di qualifica')),
                ('postponed_entry', models.CharField(blank=True, choices=[('15 min', '15 min'), ('30 min', '30 min'), ('45 min', '45 min'), ('1 ora', '1 ora')], max_length=10, null=True, verbose_name='Entrata posticipata')),
                ('early_exit', models.CharField(blank=True, choices=[('15 min', '15 min'), ('30 min', '30 min'), ('45 min', '45 min'), ('1 ora', '1 ora')], max_length=10, null=True, verbose_name='Uscita anticipata')),
                ('delays', models.PositiveSmallIntegerField(default=0, verbose_name='Numero di ritardi')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attended_curriculum', to='anagrafica.Course', verbose_name='Corso frequentato')),
            ],
            options={
                'verbose_name': 'Studente',
                'verbose_name_plural': 'Studenti',
            },
        ),
        migrations.CreateModel(
            name='DisciplinaryMeasure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.CharField(choices=[('SEGNALAZIONE', 'Segnalazione'), ('SOSPENSIONE', 'Sospensione'), ('ESPULSIONE', 'Espulsione')], max_length=20, verbose_name='Tipo')),
                ('reporting_date', models.DateField(default=datetime.datetime.now, verbose_name='Data di segnalazione')),
                ('motivation', models.TextField(verbose_name='Motivazione')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_involved', to='anagrafica.Student', verbose_name='Allievo')),
            ],
            options={
                'verbose_name': 'Provvedimento disciplinare',
                'verbose_name_plural': 'Provvedimenti disciplinari',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='sector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reference_sector', to='anagrafica.Sector', verbose_name='Settore di riferimento'),
        ),
        migrations.AddField(
            model_name='course',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_course', to='anagrafica.CourseType', verbose_name='Tipo di corso'),
        ),
        migrations.CreateModel(
            name='Convention',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.datetime.now, verbose_name='Data di stipula')),
                ('begin', models.DateField(verbose_name='Data di inizio')),
                ('end', models.DateField(verbose_name='Data di conclusione')),
                ('company_tutor', models.CharField(max_length=30, verbose_name='Tutor aziendale')),
                ('school_tutor', models.CharField(max_length=30, verbose_name='Tutor scolastico')),
                ('schedule', models.TextField(verbose_name='Orario')),
                ('return_hour', models.CharField(default='Dalle 8.00 alle 14.00', max_length=30, verbose_name='Orario nei giorni di rientro')),
                ('return_day_one', models.DateField(blank=True, null=True, verbose_name='Giorno di rientro 1')),
                ('return_day_two', models.DateField(blank=True, null=True, verbose_name='Giorno di rientro 2')),
                ('return_day_three', models.DateField(blank=True, null=True, verbose_name='Giorno di rientro 3')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affiliated_company', to='anagrafica.Company', verbose_name='Ditta')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affiliated_student', to='anagrafica.Student', verbose_name='Studente')),
            ],
            options={
                'verbose_name': 'Convenzione',
                'verbose_name_plural': 'Convenzioni',
            },
        ),
        migrations.AddField(
            model_name='company',
            name='sector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_reference_sector', to='anagrafica.Sector', verbose_name='Settore di riferimento'),
        ),
    ]
